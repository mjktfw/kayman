#! /bin/bash
# https://github.com/shakibamoshiri/bash-CLI-template

  APP_DIR="${KMN_DIR}"
  APP_DIR="${APP_DIR}" . "${APP_DIR}/app/env"

function __add() (

  ################################################################################
  # arguments
  function parse_opts() {

    while [ ${#} -gt 0 ]; do
      case "$1" in
        -- ) break ;;
        -k | --key-name ) opts[KEY_NAME]="${2:?$ERR_MSG}" ; shift 2 ;;
        -d | --dir ) opts[PUBKEY_DIR]="${2:?$ERR_MSG}" ; shift 2 ;;
        -* ) echo >&2 "$0: Error in usage." ; exit 1 ;;
        * )  break ;;
      esac
    done

    args=("$@")
  }

  declare args
  declare -A opts
  parse_opts $@

  ################################################################################
  # body

  local pubkey_path="${HOME}/.ssh/${opts[KEY_NAME]}.pub"

  # TODO: assure it's public, not private
  cp "${pubkey_path}" "${opts[PUBKEY_DIR]}/pub/"

  (cd "${opts[PUBKEY_DIR]}" &&
      git add --all . &&
      git commit -m "${opts[KEY_NAME]}";
      git push)

  exit 0;
)

function __keygen() (

  ################################################################################
  # arguments
  function parse_opts() {

    while [ ${#} -gt 0 ]; do
      case "$1" in
        -- ) break ;;
        -k | --key-name ) opts[KEY_NAME]="${2:?$ERR_MSG}" ; shift 2 ;;
        -t | --key-type ) opts[KEY_TYPE]="${2:?$ERR_MSG}" ; shift 2 ;;
        -d | --make-default ) opts[d]="1" ; shift ;;
        -* ) echo >&2 "$0: Error in usage." ; exit 1 ;;
        * )  break ;;
      esac
    done

    args=("$@")
  }

  declare args
  declare -A opts
  parse_opts $@

  ################################################################################
  # body

  local key_priv_path="${HOME}/.ssh/${opts[KEY_NAME]}"
  local key_id_path="${HOME}/.ssh/id_${opts[KEY_TYPE]}"

  # automatically creates dir, if non-existing
  ssh-keygen -q -t "${opts[KEY_TYPE]}" \
    -C "${opts[KEY_NAME]}" \
    -f "${key_priv_path}"

  if (( ${opts[d]} == 1 )); then
    ln -sf "${key_priv_path}" "${key_id_path}"
    ln -sf "${key_priv_path}.pub" "${key_id_path}.pub"
  fi
  # TODO: better create key in the working directory and add another command to make it default

  exit 0;
)

function main() (

  ################################################################################
  # arguments

  function parse_opts() {

    while [ ${#} -gt 0 ]; do
      case "$1" in
        -- ) break ;;
        # -c | --center ) opts[c]="$2" ; shift 2 ;;
        # -V | --version ) version ; exit 0 ;;
        -* ) echo >&2 "$0: Error in usage." ; exit 1 ;;
        * )  break ;;
      esac
    done

    args=("$@")
  }

  declare args
  declare -A opts
  parse_opts $@

  ################################################################################
  # body

  ################################################################################
  # caller

  if (( ${#} == 0 )); then
    echo >&2 "Missing arguments"
    exit 1
  fi

  case "${args[0]}" in
    keygen ) __keygen "${args[@]:1}" ;;
    add ) __add "${args[@]:1}" ;;
    * )
      echo >&2 "Unknown command: $1";
      # main_help 1;
      exit 1;
    ;;
  esac
)

main "$@"
